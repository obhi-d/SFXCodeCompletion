<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="FileReader.t4" #>

namespace SFXCodeCompletion.Parser
{
	using System.Collections.Generic;

	public static partial class KnownTokens
	{
		private static Dictionary<string, SfxTokenType> GetDictionary()
		{
			var keywords = "<#=read("Keywords.txt")#>".Trim().Split();
			var functions = "<#=read("Functions.txt")#>".Trim().Split();
			var variables = "<#=read("Variables.txt")#>".Trim().Split();
			var types = "<#=read("Types.txt")#>".Trim().Split();

			var result = new Dictionary<string, SfxTokenType>();

			result.AddRange(keywords, SfxTokenType.Keyword);
			result.AddRange(functions, SfxTokenType.Function);
			result.AddRange(variables, SfxTokenType.Variable);
			result.AddRange(types, SfxTokenType.Type);
			return result;

		}

		
		private static HashSet<string> GetCommands()
		{
			var commands = "<#=read("Commands.txt")#>".Trim().Split();
			var types = "<#=read("Types.txt")#>".Trim().Split();
			var result = new HashSet<string>(commands);
			result.UnionWith(types);
			return result;
		}
						
		private static HashSet<string> GetCommandParams()
		{
			var commandParams = "<#=read("CommandParams.txt")#>".Trim().Split();
			return new HashSet<string>(commandParams);
		}
	}
}



